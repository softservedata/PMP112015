Main.cpp

#include<iostream>
#include"Set.h"
using namespace std;


int main()
{
	Set a;
	int n, p;
	int* q;
	cout << "n=";
	cin >> n;
	a.create(n);
	for (int i = 2; i < n; i++)
	{
		a.addElem(i);
	}
	for (int i = 2; i < n; i++)
	{
		p = i;
		while (p < n)
		{
			p = p + i;
			a.changeElem(p);
		}
	}
	q = a.getArray();
	for (int i = 0; i < n-2; i++)
	{
		if (*(q + i) != 0)
		{
			cout << " " << *(q + i);
		}
	}
	a.del();
	system("pause");
}
--------------------------
Set.cpp


#include<iostream>
#include"Set.h"
using namespace std;

void Set::create(int amound)
{
	n = amound;
	a = new int[n];
	k = 0;
}
void Set::addElem(int elem)
{
	bool exist = false;
	for (int i = 0; i<k; i++)
	{
		if (a[i] == elem)
		{
			exist = true;
			break;
		}
	}
	if (!exist)
	{
		a[k] = elem;
		k++;
	}
}
void Set::changeElem(int value)
{
	for (int i = 0; i < n - 2; i++)
	{
		if (a[i] == value)
		{
			a[i]=0;
		}
	}
}
int* Set::getArray()
{
	return a;
}
void Set::del()
{
	delete[] a;
}
----------------------------
Set.h

#ifndef SET_H
#define SET_H
class Set {
private:
	int *a;
	int n, k;
public:
	void create(int amound);
	void addElem(int elem);
	void changeElem(int value);
	int* getArray();
	void del();
};
#endif
