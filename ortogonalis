#include <iostream>

using namespace std;
class Vector
{
public:
	int **arr;
	int **g;
	int x, y;
	Vector(int x, int y)
	{
		this->x = x;
		this->y = y;
		arr = new int*[y];
		g = new int*[y];
		for (int i = 0; i < y; ++i)
		{
			arr[i] = new int[x];
			g[i] = new int[x];
		}
		for (int i = 0; i < y; ++i)
		{
			for (int j = 0; j < x; ++j)
			{
				cin >> arr[i][j];
				if (j == 0) { g[i][j] = arr[i][j]; }
				else { g[i][j] = 1; }
			}
		}

	}

	int multiply(int** a, int**g, int k,int i)
	{
		int l = 0;
		for (int j = 0; j < y; ++j)
		{
		
			l = l + (a[j][k] * g[j][i]);
		}
		
		return l;
	}

	int* multiply(int**a, int k,int m)
	{
		int *z = new int[y];

		for (int j = 0; j < y; ++j)
		{
			z[j] = a[j][m] * k;
			
		}
		return z;
	}
	int** minus(int**a, int*g,int m)
	{
		
		for (int j = 0; j < y; ++j)
		{
			a[j][m] = a[j][m] - g[j]-1;
		}
		return a;
	}
	int** plus(int**a, int**g,int i,int k)
	{
		
		for (int j = 0; j < y; ++j)
		{
			a[i][j] = a[i][j] + g[i][j];
		}
		return a;
	}
	
	void ortogonalization()
	{

		for (int j = 1; j < y; ++j)
		{
			for (int i = 0; i < j; ++i)
			{
				minus(g, (multiply(g, (multiply(arr, g,j,i) / multiply(g, g,i,i)) ,i)),j);
			}

			//plus(g, arr,i,j);
		}
		}


	};

void main()
{
	Vector V(3, 4);
	V.ortogonalization();
	for (int j = 0; j < V.y; ++j)
	{
		for (int i = 0; i < V.x; ++i)
		{
			cout << V.arr[j][i] << " ";
		}
		cout << endl;
	}
	cout << endl << endl << endl;
	for (int j = 0; j < V.y; ++j)
	{
		for (int i = 0; i < V.x; ++i)
		{
			cout << V.g[j][i] << " ";
		}
		cout << endl;
	}
}
