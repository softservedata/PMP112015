using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace mass_hashtable
{
    class Program
    {
        public class IntMas : IEnumerable, IEnumerator
        {
            private Hashtable list;
            private int index;

            public IntMas()
            {
                index = -1;
                list = new Hashtable();
            }

            public object this[int column]
            {
                get
                {
                    return list[column];
                }
                set
                {
                    list[column] = value;
                }
            }


            public IEnumerator GetEnumerator()
            {
                return (IEnumerator)this;
            }

            public bool MoveNext()
            {
                index++;
                if (index >= list.Count)
                    return false;
                else
                    return true;
            }

            public void Reset()
            {
                index = -1;
            }

            public object Current
            {
                get
                {
                    return list[index];
                }
            }

            public int Count()
            {
                int size = 0;
                foreach (int s in this)
                {
                    size++;
                }
                this.Reset();
                return size;
            }

            public void Clone(IntMas a)
            {
                a.MemberwiseClone();
            }

            public void Met(IntMas b)
            {
                IntMas c = new IntMas();
                int sizeC = this.Count();
                for (int i=0;i<sizeC;i++)
                {
                    c[i] = this[i];
                }
                int size = 0;
                if (this.Count() > b.Count())
                {
                    size = b.Count();
                }
                else
                {
                    size = this.Count();
                }
                for (int i = 0; i < size; i++)
                {
                    this[i] = Convert.ToInt32(this[i]) / Convert.ToInt32(b[i]);
                }
                for (int i = 0; i < size; i++)
                {
                    b[i] = Convert.ToInt32(b[i]) / Convert.ToInt32(c[i]);
                }
            }

        }
        static void Main(string[] args)
        {
            Console.WriteLine("Start");
            IntMas a = new IntMas();
            IntMas b = new IntMas();
            a[0] = 1;
            a[1] = 2;
            a[2] = 3;
            b[0] = 10;
            b[1] = 20;
            b[2] = 30;
            b[3] = 40;
            Console.WriteLine("Met_Start...");
            a.Met(b);
            Console.WriteLine("Met_End...");
            foreach (int str in a)
            {
                Console.WriteLine(str);
            }
            Console.WriteLine();
            foreach (int str in b)
            {
                Console.WriteLine(str);
            }
            Console.WriteLine();
            Console.WriteLine("End");
            Console.ReadLine();
        }
    }
}
