
#pragma once
#include<iostream>
using namespace std;
class myString
{
private:
	int s;
	char* str;
public:
	myString(int s = 253)
	{
		this->s = s;
		this->str = new char[s];
		this->str[0] = '\0';
		cout << "\nConstructor DEFAULT";
	}
	myString(myString& temp)
	{
		this->s = temp.s;
		this->str = new char[s];
		this->str[0] = '\0';
		cout << "\nConstructor COPY";
	}
	~myString()
	{
		delete[] str;
		cout << "\ndestructor done\n";
	}
	void read()
	{
		cout << "\ninput row = ";
		cin.getline(str, s);
	}
	void print()
	{
		cout << "\nrow is: " << str << endl;
	}
	myString change(myString &temp)
	{
		this->str = temp.str;
		int i = strlen(str);
		for (int j = 0; j < i; j++)
		{
			while (((str[j] == ' ') && (str[j + 1] == ' ')) || ((str[j] == ' ') && (str[j - 1] == ' ')))
			{
				k = strlen(str);
				if (k > 0 && str[0] == ' ')
					str.erase(0, 1);
				if (str[k - 1] == ' ')
					str.erase(k - 1, 1)
				break;
			}
		}
		return *this;
	}
	void change()
	{ 
		int i, j;
		for (i = strlen(str) - 1, j = 0; i >= 0; j++, i--)
		{
			str3[i] = str[j];
		}
		str3[j] = '\0'; /* присоединение завершающего символа */
	}
};







#include<iostream>
#include "class.h"
using namespace std;
void main()
{
	myString *str1 = new myString();
	myString *str2 = new myString();
	str1->read();
	str1->print();
	str2->change(*str1);
	str2->reverse();
	str2->print();
	system("pause");
}
