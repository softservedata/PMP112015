#include <iostream>
using namespace std;


void main()
{
	int i, n, k;
	int matrixsize;
	double z;
	double** A;
	double* B;
	double* eps;
	double* X;
	double* et;

	cout << "NxN: ";
	cin >> matrixsize;

#pragma region initialization
	{
		A = new double *[matrixsize];
		B = new double [matrixsize];
		eps= new double [matrixsize];
		X = new double [matrixsize];
		et = new double [matrixsize];
	
	}
	for (i = 0; i < matrixsize; i++) 
	{
		A[i] = new double[matrixsize];
	}
	for (i = 0; i < matrixsize; i++)
	{
		for (k = 0; k < matrixsize; k++)
		{
			cout << "Enter A[" << i << "][" << k << "]: ";
			cin >> A[i][k];
		}
	}
	cout << "Matrix A:" << endl;
	for (i = 0; i<matrixsize; i++)
	{
		for (k = 0; k < matrixsize; k++)
		{
			cout << A[i][k] << "  ";
		}
		cout << endl;
	}

	for (i = 0; i < matrixsize; i++)
	{
		cout << "Enter B[" << i << "]:";
		cin >> B[i];
	}


	n = matrixsize - 1;
	eps[0] = -A[0][1] / A[0][0];
	et[0] = B[0] / A[0][0];

	for (i = 1; i<n; i++)
	{
		z = A[i][i] + A[i][i - 1] * eps[i - 1];
		eps[i] = -A[i][i + 1] / z;
		et[i] = (B[i] - A[i][i - 1] * et[i - 1]) / z;
	}

	X[n] = (B[n] - A[n][n - 1] * et[n - 1]) / (A[n][n] + A[n][n - 1] * eps[n - 1]);

	for (i = n - 1; i >= 0; i--)
	{
		X[i] = eps[i] * X[i + 1] + et[i];
	}
	cout << "Matrix X:" << endl;
	for (i = 0; i < matrixsize; i++)
	{
		cout << "X[" << i << "]: " << X[i] << endl;
	}
	system("pause");

}
